#####################################
第 2 回 時雨堂 WebRTC セミナー 夜の部
#####################################

:日時: 2020-01-22 (水)
:更新: 2019-12-16
:作: `時雨堂 <https://shiguredo.jp>`_
:バージョン: 19.12.0

.. contents:: :depth: 1

概要
====

これは `第 2 回 時雨堂 WebRTC セミナー <https://github.com/shiguredo/seminar/blob/master/webrtc_seminar_2.rst>`_ の夜の部の発表者向け資料です。

発表者がこの資料を使って口頭で補足をしつつ発表します。

WebRTC の現在と今後
===================



WebRTC Signaling Server Ayame 入門
==================================



Ayame Plus の紹介
=================


WebRTC Native Client Momo 入門
==============================


新製品 Azuki の紹介
===================


WebRTC SFU Sora 入門
====================



Sora Labo の紹介
================

`時雨堂 Sora Labo 開発ログ <https://gist.github.com/voluntas/99bfcefc3b63f481941ae91584916a79>`_

AWS の WebRTC 対応について
==========================


事前質問への回答
================

データチャネルについて
----------------------

個人的には WebTransport が来るまでは待ちたい、というのが本音です。
ただ ROS と SFU の組み合わせでは需要があるのでは？とは思っております。

現実的な要望を言っていただくのが、弊社としてもリソースを投入しやすいです。

実際ベース実装はあるため Sora に追加するのは 1-2 ヶ月で実現は可能です。

自動字幕機能
------------

Sora の連携の話として、今は少し止まっていますが、 2020 年中にはお披露目できるかと思います。
GCP の Cloud Text-to-Speech API を利用する Gateway を開発中です。 OSS にて公開予定です。

WebRTC を利用したサービスを作る場合のコストの見積もり方
-------------------------------------------------------

見積もりは基本あたらないので、小さく作って徐々に大きくしていくというのが良いです。

また、商用の WebRTC サービスやパッケージを利用したり、
テクニカルサポートを契約することです。餅は餅屋ということで。

P2P と SFU の使い分けについて
-----------------------------

仕事で使う前提で回答させていただきます。
1:1 であれば P2P を検討してもよい、基本的には SFU を採用すべきという考えです。

これはポジショントークとかではなく、
P2P は好きなのですが、サポートを考えたりするとログが取りやすいサーバ経由である SFU を採用したほうが良いです。

WebRTC 勃興の理由と将来性
-----------------------------

水面下ではもともと使われていたのが、Flash が死ぬことで話題になってきた以上のことは無いと思います。

将来性は WebRTC の変わりの技術は今のところ無いので、当面は WebRTC が使われていくと思います。
とはいえ、 WebTransport がくれば Media over WebTransport を進めていきそちらによっていくと考えています。

5G への期待
------------------

あまり無い、というのが正直なところです。
もちろん端末から基地局までの速度が早くなり、安定することは嬉しいのですが、
劇的になにか改善されるということは無いと考えています。

WebRTC SFU のスケールに関して
----------------------------------------

1:N であれば多段の仕組みを採用するのが無難だと思います。
多くの接続を維持するというのであれば、WebRTC SFU に依存すると思います。

ディスパッチをするサーバを用意して、
接続先の WebRTC SFU 情報を払い出す仕組みが無難だと考えています。

WebRTC のモバイル端末でのデバッグ方法
----------------------------------------

WebRTC に関する情報のキャッチアップの方法
-----------------------------------------

手前味噌ですがこちらの Discord に参加するのをおすすめします。

`WebRTC オンライン専用コミュニティ <https://gist.github.com/voluntas/3849d9881d97ea0bb403a2122f0e4a31>`_

質疑応答
========


